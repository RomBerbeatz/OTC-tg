// Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
let tg = window.Telegram.WebApp;
tg.expand();

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentListing = null;
let currentUser = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
    if (tg.initDataUnsafe && tg.initDataUnsafe.user) {
        currentUser = tg.initDataUnsafe.user;
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Telegram:', currentUser);
    }
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–∏—Å–∫
    setupSearch();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    setupFilters();
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–∏—Å–∫–∞
function setupSearch() {
    const searchInput = document.getElementById('searchInput');
    const categoryFilter = document.getElementById('categoryFilter');
    
    let searchTimeout;
    
    searchInput.addEventListener('input', function() {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
            performSearch();
        }, 500);
    });
    
    categoryFilter.addEventListener('change', performSearch);
}

// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞
function performSearch() {
    const search = document.getElementById('searchInput').value;
    const category = document.getElementById('categoryFilter').value;
    
    const params = new URLSearchParams();
    if (search) params.append('search', search);
    if (category) params.append('category', category);
    
    fetch(`/api/listings?${params}`)
        .then(response => response.json())
        .then(data => {
            displayListings(data.listings);
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', error);
            showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π', 'error');
        });
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
function displayListings(listings) {
    // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    document.querySelectorAll('.category-section').forEach(section => {
        section.style.display = 'none';
    });
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const groupedListings = {};
    listings.forEach(listing => {
        if (!groupedListings[listing.category]) {
            groupedListings[listing.category] = [];
        }
        groupedListings[listing.category].push(listing);
    });
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    Object.keys(groupedListings).forEach(category => {
        displayCategoryListings(category, groupedListings[category]);
    });
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏—è
function viewListing(listingId) {
    fetch(`/api/listings/${listingId}`)
        .then(response => response.json())
        .then(listing => {
            currentListing = listing;
            displayListingModal(listing);
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:', error);
            showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è', 'error');
        });
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º
function displayListingModal(listing) {
    const modal = document.getElementById('listingModal');
    const title = document.getElementById('listingTitle');
    const content = document.getElementById('listingContent');
    
    title.textContent = listing.title;
    
    content.innerHTML = `
        <div class="seller-info">
            <h6>üë§ –ü—Ä–æ–¥–∞–≤–µ—Ü</h6>
            <div class="d-flex justify-content-between">
                <span>${listing.seller.first_name} ${listing.seller.username ? '@' + listing.seller.username : ''}</span>
                <span class="rating">‚≠ê ${listing.seller.rating.toFixed(1)}</span>
            </div>
        </div>
        
        <div class="mb-3">
            <h6>üìù –û–ø–∏—Å–∞–Ω–∏–µ</h6>
            <p>${listing.description}</p>
        </div>
        
        <div class="mb-3">
            <h6>üí∞ –¶–µ–Ω–∞</h6>
            <span class="price">${listing.price} ${listing.currency}</span>
        </div>
        
        ${listing.additional_info ? `
        <div class="mb-3">
            <h6>‚ÑπÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h6>
            <p>${listing.additional_info}</p>
        </div>
        ` : ''}
        
        <div class="mb-3">
            <h6>üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</h6>
            <small class="text-muted">${new Date(listing.created_at).toLocaleDateString('ru-RU')}</small>
        </div>
    `;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modalInstance = new bootstrap.Modal(modal);
    modalInstance.show();
}

// –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º
function contactSeller() {
    if (!currentListing || !currentUser) {
        showNotification('–û—à–∏–±–∫–∞: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö', 'error');
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º—É –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
    const content = document.getElementById('listingContent');
    const contactForm = document.createElement('div');
    contactForm.className = 'contact-form';
    contactForm.innerHTML = `
        <h6>üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü—É</h6>
        <div class="mb-3">
            <textarea class="form-control" id="messageText" rows="3" 
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."></textarea>
        </div>
        <button class="btn btn-primary" onclick="sendMessage()">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
        <button class="btn btn-secondary ms-2" onclick="cancelMessage()">–û—Ç–º–µ–Ω–∞</button>
    `;
    
    content.appendChild(contactForm);
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º"
    document.querySelector('.modal-footer .btn-primary').style.display = 'none';
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
function sendMessage() {
    const messageText = document.getElementById('messageText').value.trim();
    
    if (!messageText) {
        showNotification('–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', 'warning');
        return;
    }
    
    const data = {
        listing_id: currentListing.id,
        message: messageText,
        user_id: currentUser.id
    };
    
    fetch('/api/contact_seller', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(result => {
        if (result.success) {
            showNotification('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!', 'success');
            
            // –£–≤–µ–¥–æ–º–ª—è–µ–º Telegram –æ –¥–µ–π—Å—Ç–≤–∏–∏
            tg.showAlert('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–æ–¥–∞–≤—Ü—É!');
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            bootstrap.Modal.getInstance(document.getElementById('listingModal')).hide();
        } else {
            showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è', 'error');
        }
    })
    .catch(error => {
        console.error('–û—à–∏–±–∫–∞:', error);
        showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è', 'error');
    });
}

// –û—Ç–º–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
function cancelMessage() {
    document.querySelector('.contact-form').remove();
    document.querySelector('.modal-footer .btn-primary').style.display = 'block';
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = 'info') {
    // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const notification = document.createElement('div');
    notification.className = `alert alert-${type === 'error' ? 'danger' : type} alert-dismissible fade show position-fixed`;
    notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
    notification.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    
    document.body.appendChild(notification);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        if (notification.parentNode) {
            notification.remove();
        }
    }, 5000);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
function setupFilters() {
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
    document.querySelectorAll('.listing-card').forEach(card => {
        card.addEventListener('click', function() {
            const listingId = this.dataset.listingId;
            viewListing(listingId);
        });
    });
}